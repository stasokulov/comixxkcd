{"version":3,"sources":["src/index.js"],"names":["lastPageNumber","currentPageNumber","previousPageButton","document","querySelector","nextPageButton","setListeners","addEventListener","showPreviousPage","showNextPage","getLastPageNumber","getComixData","then","lastPageData","num","choosePage","hash","window","location","slice","showPage","showLastPage","pageNumber","pageData","console","log","fillPage","disableNextButton","activateNextButton","setHash","proxy","url","urlWithProxy","encodeURIComponent","fetch","response","ok","json","Error","contents","jsonContents","pageObj","JSON","parse","dateHTML","titleHTML","imgHTML","transcriptHTML","date","day","month","year","innerHTML","title","src","img","transcript","classList","add","remove"],"mappings":";AAAA,IAAIA,EAAiB,GACjBC,EAAoB,GAClBC,EAAqBC,SAASC,cAAc,6BAC5CC,EAAiBF,SAASC,cAAc,yBAM9C,SAASE,IACRJ,EAAmBK,iBAAiB,QAASC,GAC7CH,EAAeE,iBAAiB,QAASE,GAG1C,SAASC,IACRC,IACCC,KAAK,SAAAC,GAAwBA,OAAAA,EAAaC,MAC1CF,KAAK,SAAAE,GAAQd,EAAiBc,IAGhC,SAASC,IAEFC,IAAAA,EAAOC,OAAOC,SAASF,KAAKG,MAAM,IAExCH,MAAAA,EAAAA,EAAwB,iBAATA,GAAoBI,EAASJ,GAAQK,IAGrD,SAASD,EAASE,GACjBX,EAAaW,GACZV,KAAK,SAAAW,GACLC,QAAQC,IAAIF,GACZG,EAASH,GACTtB,GAAqBD,EAAiB2B,IAAsBC,IAC5DC,MAIF,SAASR,IACRD,IAGD,SAAST,EAAaW,GAEfQ,IAEFC,EACSA,EAAbT,EAAsCA,mBAAAA,OAAAA,EAA5B,gBAAV,8BAEMU,IAAAA,EAAkBF,GAAAA,OALV,iCAKuBG,SAAAA,OAAAA,mBAAmBF,IAEjDG,OAAAA,MAAMF,GACZpB,KAAK,SAAAuB,GACDA,GAAAA,EAASC,GAAI,OAAOD,EAASE,OAC3B,MAAA,IAAIC,MAAM,yBAEhB1B,KAAK,SAAAyB,GAAgBA,OAAAA,EAAKE,WAC1B3B,KAAK,SAAA4B,GACCC,IAAAA,EAAUC,KAAKC,MAAMH,GAEpBC,OADPxC,EAAoBwC,EAAQ3B,IACrB2B,IAIT,SAASf,EAASH,GACXqB,IAAAA,EAAWzC,SAASC,cAAc,gBAClCyC,EAAY1C,SAASC,cAAc,iBACnC0C,EAAU3C,SAASC,cAAc,eACjC2C,EAAiB5C,SAASC,cAAc,2BAExC4C,EAAUzB,GAAAA,OAAAA,EAAS0B,IAAO1B,KAAAA,OAAAA,EAAS2B,MAAS3B,KAAAA,OAAAA,EAAS4B,MAE3DP,EAASQ,UAAYJ,EACrBH,EAAUO,UAAY7B,EAAS8B,MAC/BP,EAAQQ,IAAM/B,EAASgC,IACvBR,EAAeK,UAAY7B,EAASiC,WAGrC,SAAShD,IACRY,EAASnB,EAAoB,GAG9B,SAASQ,IACRW,EAASnB,EAAoB,GAG9B,SAAS0B,IACRtB,EAAeoD,UAAUC,IAAI,yBAG9B,SAAS9B,IACRvB,EAAeoD,UAAUE,OAAO,yBAGjC,SAAS9B,IACRZ,OAAOC,SAASF,KAAOf,EAzFxBK,IACAI,IACAK","file":"src.56a6f0a8.js","sourceRoot":"..","sourcesContent":["let lastPageNumber = '';\nlet currentPageNumber = '';\nconst previousPageButton = document.querySelector('[data-js-previous_button]');\nconst nextPageButton = document.querySelector('[data-js-next_button]');\n\nsetListeners();\ngetLastPageNumber();\nchoosePage();\n\nfunction setListeners() {\n\tpreviousPageButton.addEventListener('click', showPreviousPage);\n\tnextPageButton.addEventListener('click', showNextPage);\n}\n\nfunction getLastPageNumber() {\n\tgetComixData()\n\t.then(lastPageData => {return lastPageData.num})\n\t.then(num => {lastPageNumber = num})\n};\n\nfunction choosePage() {\n\t// Берем хэш из url и отрезаем от него первый символ, который решетка.\n\tconst hash = window.location.hash.slice(1);\n\t// Если оставшийся хэш есть и он число, то показываем страницу с номером равным хэшу. Если нет, то последнюю страницу.\n\thash ?? typeof hash === 'number' ? showPage(hash) : showLastPage();\n};\n\nfunction showPage(pageNumber) {\n\tgetComixData(pageNumber)\n\t.then(pageData => {\n\t\tconsole.log(pageData);\n\t\tfillPage(pageData);\n\t\tcurrentPageNumber >= lastPageNumber ? disableNextButton() : activateNextButton();\n\t\tsetHash();\n\t});\n};\n\nfunction showLastPage() {\n\tshowPage();\n}\n\nfunction getComixData(pageNumber) {\n\t// Прокси-сервер для обхода CORS.\n\tconst proxy = 'https://api.allorigins.win/get';\n\t// Собираем url страницы комикса из неизменной части ссылки и номера страницы.\n\tlet url;\n\tpageNumber ? url = `http://xkcd.com/${pageNumber}/info.0.json` : url = `http://xkcd.com/info.0.json`;\n\t// Склеиваем адрес прокси и url страницы комикса по правилам сервиса https://allorigins.win/\n\tconst urlWithProxy = `${proxy}?url=${encodeURIComponent(url)}`;\n\t\n\treturn fetch(urlWithProxy)\n\t.then(response => {\n\t\tif (response.ok) return response.json() // Этот json содержит как данные комикса, так и прокси.\n\t\tthrow new Error('Что-то пошло не так')\n\t})\n\t.then(json => {return json.contents}) // Возвращаем только данные комикса.\n\t.then(jsonContents => {\n\t\tconst pageObj = JSON.parse(jsonContents); // Преобразуем в объект.\n\t\tcurrentPageNumber = pageObj.num;\n\t\treturn(pageObj);\n\t});\n};\n\nfunction fillPage(pageData) {\n\tconst dateHTML = document.querySelector('.comix__date');\n\tconst titleHTML = document.querySelector('.comix__title');\n\tconst imgHTML = document.querySelector('.comix__img');\n\tconst transcriptHTML = document.querySelector('.comix__transcript-text');\n\n\tconst date = `${pageData.day}-${pageData.month}-${pageData.year}`\n\n\tdateHTML.innerHTML = date;\n\ttitleHTML.innerHTML = pageData.title;\n\timgHTML.src = pageData.img;\n\ttranscriptHTML.innerHTML = pageData.transcript;\n}\n\nfunction showPreviousPage() {\n\tshowPage(currentPageNumber - 1);\n}\n\nfunction showNextPage() {\n\tshowPage(currentPageNumber + 1);\n}\n\nfunction disableNextButton() {\n\tnextPageButton.classList.add('comix__button_disable')\n}\n\nfunction activateNextButton() {\n\tnextPageButton.classList.remove('comix__button_disable')\n}\n\nfunction setHash() {\n\twindow.location.hash = currentPageNumber;\n}"]}